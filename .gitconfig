[core]
    excludesfile = ~/.gitignore_global
    pager = delta
[include]
    path = .gitsigningkey

[user]
    # Add a "~/.gitsigningkey" file with your signing key instead of putting it here.
    # It gets "included" above so that you can keep the signing key "separate".
    # This file must have:
    #     - user.email
    #     - user.signingkey
    name = Julian Torres
[gpg]
	program = /usr/local/bin/gpg
[commit]
	gpgsign = true
[pager]
    diff = delta
    log = delta
    reflog = delta
    show = delta
[interactive]
    diffFilter = delta --color-only --features=interactive
[diff]
    colorMoved = default
[init]
    defaultBranch = trunk
[filter "lfs"]
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f
[pull]
    ff = only
[delta]
    navigate = true
    features = decorations
    line-numbers = true
    syntax-theme = Monokai Extended Bright
[delta "interactive"]
    keep-plus-minus-markers = false
[delta "decorations"]
    commit-decoration-style = blue ol
    commit-style = raw
    file-style = omit
    hunk-header-decoration-style = blue box
    hunk-header-file-style = red
    hunk-header-line-number-style = "#067a00"
    hunk-header-style = file line-number syntax
[merge]
    conflictstyle = diff3
[alias]
    # List available aliases
    aliases = !git config --get-regexp alias | sed -re 's/alias\\.(\\S*)\\s(.*)$/\\1 = \\2/g'
    # Command shortcuts
    ci = commit
    co = checkout
    st = status
    # Display tree-like log, because default log is a pain…
    lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
    # Useful when you have to update your last commit
    # with staged files without editing the commit message.
    oops = commit --amend --no-edit
    # Ensure that force-pushing won't lose someone else's work (only mine).
    push-with-lease = push --force-with-lease
    # Rebase won’t trigger hooks on each "replayed" commit.
    # This is an ugly hack that will replay each commit during rebase with the
    # standard `commit` command which will trigger hooks.
    rebase-with-hooks = rebase -x 'git reset --soft HEAD~1 && git commit -C HEAD@{1}'
    # List local commits that were not pushed to remote repository
    review-local = "!git lg @{push}.."
    # Edit last commit message
    reword = commit --amend
    # Undo last commit but keep changed files in stage
    uncommit = reset --soft HEAD~1
    # Remove file(s) from Git but not from disk
    untrack = rm --cache --
	logs = log --show-signature
[log]
    # Use abbrev SHAs whenever possible/relevant instead of full 40 chars
    abbrevCommit = true
    # Automatically --follow when given a single path
    follow = true
[push]
	autoSetupRemote = true
[comit]
	gpgsign = true
[rebase]
	updateRefs = true
[credential]
	helper = 
	helper = /usr/local/share/gcm-core/git-credential-manager
[credential "https://dev.azure.com"]
	useHttpPath = true
