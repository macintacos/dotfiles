{
  "vscode_custom_css.imports": [
    "file:///Users/macinburrito/GitLocal/Play/dotfiles/vscode/vscode-dim-editors.js"
  ],
  "vscode_custom_css.statusbar": false,
  "[confluence]": {
    "editor.formatOnSave": false,
    "editor.minimap.enabled": false,
    "editor.quickSuggestions": {
      "comments": false,
      "other": false,
      "strings": false
    },
    "editor.wordWrap": "wordWrapColumn",
    "rewrap.autoWrap.enabled": true,
    "rewrap.reformat": true
  },
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[dockercompose]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  "[go]": {
    "editor.codeActionsOnSave": {
      "source.organizeImports": true
    },
    "editor.formatOnSave": true,
    "editor.snippetSuggestions": "none"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": false
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "modifications"
  },
  "[javascriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file"
  },
  "[makefile]": {
    "editor.insertSpaces": false,
    "editor.tabSize": 4
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": false,
    "editor.minimap.enabled": false,
    "editor.quickSuggestions": {
      "comments": "on",
      "other": "on",
      "strings": "on"
    },
    "editor.wordWrap": "bounded",
    "editor.rulers": [88],
    "editor.wordWrapColumn": 88,
    "editor.wrappingIndent": "same"
  },
  "[mongodb]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.formatOnType": true
  },
  "[nunjucks]": {
    "editor.defaultFormatter": "okitavera.vscode-nunjucks-formatter"
  },
  "[plaintext]": {
    "editor.quickSuggestions": {
      "comments": "on",
      "other": "on",
      "strings": "on"
    },
    "editor.wordWrap": "off",
    "editor.wordWrapColumn": 100
  },
  "[postcss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[python]": {
    "editor.autoClosingBrackets": "always",
    "editor.codeActionsOnSave": {
      "source.organizeImports": true
    },
    "editor.defaultFormatter": "ms-python.python",
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file",
    "editor.rulers": [88],
    "editor.wordWrapColumn": 88,
    "editor.wrappingIndent": "indent",
    "editor.wordWrap": "bounded"
  },
  "[rust]": {
    "editor.formatOnSave": true
  },
  "[shellscript]": {
    "editor.autoClosingBrackets": "always",
    "editor.defaultFormatter": "foxundermoon.shell-format",
    "editor.formatOnSave": false,
    "editor.tabSize": 4
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact, typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.formatOnSave": true,
    "editor.tabSize": 2
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.autoIndent": "advanced",
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2
  },
  "breadcrumbs.enabled": true,
  "code-runner.enableAppInsights": false,
  "code-runner.executorMap": {
    "javascript": "node -r esm",
    "perl": "perl",
    "python": "$pythonPath $fullFileName"
  },
  "code-runner.fileDirectoryAsCwd": true,
  "code-runner.showRunIconInEditorTitleMenu": false,
  "codeui.targetingMode": "themeSpecific",
  "color-highlight.markRuler": false,
  "color-highlight.markerType": "underline",
  "commands.commands": {},
  "confluenceMarkup.monospaceFont": "MonoLisa",
  "customizeUI.activityBar": "regular",
  "customizeUI.font.regular": "Inter",
  "customizeUI.fontSizeMap": {
    "13px": "13px",
    "monospace": "14px"
  },
  "customizeUI.statusBarPosition": "under-panel",
  "customizeUI.stylesheet": {
    ".monaco-workbench": "--vscode-commandCenter-border: #121a20 !important;",
    ".quick-input-titlebar": "border-radius: 7px 7px 0px 0px !important;",
    ".quick-input-widget": "top: 25% !important; border-radius: 7px !important;",
    "[id='vscodevim.vim.primary']": "font-family: 'MonoLisa-Regular'; color: #ff77c1;",
    "[id='workbench.view.explorer'] .monaco-icon-label.folder-icon > .monaco-icon-label-container > .monaco-icon-name-container > .label-name": "font-weight: 900; filter: brightness(1.2);"
  },
  "customizeUI.titleBar": "inline",
  "diffEditor.codeLens": true,
  "diffEditor.ignoreTrimWhitespace": true,
  "diffEditor.renderSideBySide": false,
  "diffEditor.wordWrap": "off",
  "docker.images.sortBy": "CreatedTime",
  "editor.acceptSuggestionOnCommitCharacter": false,
  "editor.accessibilitySupport": "off",
  "editor.bracketPairColorization.enabled": true,
  "editor.codeLensFontFamily": "Inter",
  "editor.cursorBlinking": "solid",
  "editor.cursorSmoothCaretAnimation": true,
  "editor.cursorSurroundingLines": 10,
  "editor.detectIndentation": false,
  "editor.dragAndDrop": true,
  "editor.find.cursorMoveOnType": false,
  "editor.foldingImportsByDefault": true,
  "editor.fontFamily": "MonoLisa",
  "editor.fontLigatures": "'ss06' on, 'zero' on, 'ss04' on",
  "editor.fontSize": 14,
  "editor.formatOnSaveMode": "modificationsIfAvailable",
  "editor.guides.bracketPairs": "active",
  "editor.inlayHints.enabled": "onUnlessPressed",
  "editor.lineHeight": 21,
  "editor.lineNumbers": "on",
  "editor.linkedEditing": true,
  "editor.matchBrackets": "never",
  "editor.minimap.enabled": false,
  "editor.renderLineHighlight": "gutter",
  "editor.renderWhitespace": "all",
  "editor.semanticHighlighting.enabled": true,
  "editor.showFoldingControls": "always",
  "editor.smoothScrolling": true,
  "editor.snippetSuggestions": "bottom",
  "editor.stickyTabStops": true,
  "editor.suggest.localityBonus": true,
  "editor.suggest.preview": true,
  "editor.suggest.showInlineDetails": true,
  "editor.suggest.snippetsPreventQuickSuggestions": false,
  "editor.suggestSelection": "recentlyUsedByPrefix",
  "editor.tokenColorCustomizations": {},
  "editor.wordWrap": "off",
  "emmet.includeLanguages": {
    "markdown": "html",
    "nunjucks": "html"
  },
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.triggerExpansionOnTab": true,
  "errorLens.followCursor": "closestProblem",
  "errorLens.gutterIconsEnabled": true,
  "errorLens.messageTemplate": "$source: $message [$code]",
  "eslint.codeActionsOnSave.mode": "all",
  "eslint.codeActionsOnSave.rules": ["sort-imports"],
  "explicitFolding.rules": {
    "*": {
      "separator": "{{{"
    },
    "javascriptreact": [
      {
        "begin": "{/*",
        "end": "*/}"
      },
      {
        "begin": "<",
        "end": "/>"
      }
    ],
    "python": [
      {
        "begin": "(",
        "end": ")"
      }
    ]
  },
  "explorer.autoReveal": "focusNoScroll",
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.openEditors.visible": 0,
  "extensions.autoUpdate": false,
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "files.associations": {
    "*.end": "shellscript",
    "*.jira": "confluence",
    "*.json": "json",
    "*.sublime-keymap": "json",
    "*.textbundle": "markdown",
    ".ackrc": "shellscript",
    ".cvimrc": "viml",
    ".env": "env",
    ".env-example": "env",
    ".gitignore_global": "gitignore",
    ".ideavimrc": "viml",
    ".prettierrc": "yaml",
    ".spacemacs": "lisp",
    ".surfingkeysrc": "javascript",
    "keybindings.json": "jsonc",
    "settings.json": "jsonc"
  },
  "files.autoSave": "onWindowChange",
  "files.defaultLanguage": "txt",
  "files.exclude": {
    "**/*.zwc*": true,
    "**/.classpath": true,
    "**/.factorypath": true,
    "**/.git": false,
    "**/.project": true,
    "**/.settings": true,
    "**/.zcompdump": true,
    "**/.zsh_history": true
  },
  "git.autofetch": true,
  "git.confirmSync": false,
  "git.enableCommitSigning": true,
  "git.enableSmartCommit": true,
  "git.enableStatusBarSync": false,
  "gitlens.advanced.messages": {
    "suppressCommitHasNoPreviousCommitWarning": false,
    "suppressCommitNotFoundWarning": false,
    "suppressFileNotUnderSourceControlWarning": false,
    "suppressGitVersionWarning": false,
    "suppressLineUncommittedWarning": true,
    "suppressNoRepositoryWarning": false
  },
  "gitlens.blame.ignoreWhitespace": true,
  "gitlens.codeLens.scopes": ["containers", "document", "blocks"],
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.details": false,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.keymap": "none",
  "gitlens.statusBar.command": "gitlens.showQuickCommitDetails",
  "gitlens.statusBar.reduceFlicker": true,
  "go.alternateTools": {
    "go": "/opt/homebrew/bin/go"
  },
  "go.autocompleteUnimportedPackages": true,
  "go.buildOnSave": "package",
  "go.coverOnTestPackage": false,
  "go.formatTool": "goimports",
  "go.lintFlags": ["--fast"],
  "go.lintOnSave": "package",
  "go.lintTool": "golangci-lint",
  "go.toolsManagement.autoUpdate": true,
  "go.useCodeSnippetsOnFunctionSuggest": true,
  "go.useCodeSnippetsOnFunctionSuggestWithoutType": true,
  "go.useLanguageServer": true,
  "go.vetOnSave": "package",
  "gopls": {
    "gofumpt": true
  },
  "indentRainbow.colors": [
    "rgba(98, 114, 164, 0.1)",
    "rgba(98, 114, 164, 0.2)",
    "rgba(98, 114, 164, 0.3)",
    "rgba(98, 114, 164, 0.4)",
    "rgba(98, 114, 164, 0.5)"
  ],
  "indentRainbow.includedLanguages": ["python"],
  "javascript.suggest.completeFunctionCalls": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "json.schemas": [],
  "json.trace.server": "verbose",
  "jupyter.askForKernelRestart": false,
  "jupyter.sendSelectionToInteractiveWindow": false,
  "keyboard.dispatch": "keyCode",
  "markdown.extension.italic.indicator": "_",
  "markdown.extension.list.indentationSize": "inherit",
  "markdown.extension.orderedList.marker": "one",
  "markdown.extension.toc.levels": "2..6",
  "markdown.extension.toc.slugifyMode": "github",
  "markdownShortcuts.bullets.marker": "-",
  "markdownShortcuts.icons.bold": false,
  "markdownShortcuts.icons.bullets": false,
  "markdownShortcuts.icons.italic": false,
  "markdownShortcuts.icons.strikethrough": false,
  "markdownlint.config": {
    "MD004": {
      "style": "dash"
    },
    "MD006": false,
    "MD007": false,
    "MD010": false,
    "MD012": false,
    "MD026": false,
    "MD027": false,
    "MD029": false,
    "MD032": false,
    "MD033": false,
    "MD034": false,
    "MD040": false,
    "MD041": false,
    "MD047": false,
    "default": true
  },
  "multiCommand.commands": [
    {
      "command": "multiCommand.acceptFindAndExit",
      "sequence": [
        "editor.action.nextMatchFindAction",
        "closeFindWidget",
        "extension.vim_escape"
      ]
    },
    {
      "command": "multiCommand.peekDefinitionAndFocus",
      "interval": 100,
      "sequence": ["editor.action.peekDefinition", "togglePeekWidgetFocus"]
    },
    {
      "command": "multiCommand.navigateExplorerDownAndPreviewFile",
      "sequence": ["list.focusDown", "filesExplorer.openFilePreserveFocus"]
    },
    {
      "command": "multiCommand.navigateExplorerUpAndPreviewFile",
      "sequence": ["list.focusUp", "filesExplorer.openFilePreserveFocus"]
    },
    {
      "command": "multiCommand.splitWindowRightAndSearchForFile",
      "sequence": [
        "workbench.action.splitEditorRight",
        "workbench.action.quickOpen"
      ]
    },
    {
      "command": "multiCommand.splitWindowLeftAndSearchForFile",
      "sequence": [
        "workbench.action.splitEditorLeft",
        "workbench.action.quickOpen"
      ]
    },
    {
      "command": "multiCommand.splitWindowBelowAndSearchForFile",
      "sequence": [
        "workbench.action.splitEditorDown",
        "workbench.action.quickOpen"
      ]
    },
    {
      "command": "multiCommand.splitWindowAboveAndSearchForFile",
      "sequence": [
        "workbench.action.splitEditorUp",
        "workbench.action.quickOpen"
      ]
    },
    {
      "command": "multiCommand.unfocusInputByCreatingNewEditorGroup",
      "sequence": ["workbench.action.newGroupAbove"]
    },
    {
      "command": "multiCommand.closePanelAndSidebarAndOtherEditors",
      "sequence": [
        "workbench.action.closePanel",
        "workbench.action.closeSidebar",
        "workbench.action.closeEditorsInOtherGroups"
      ]
    },
    {
      "command": "multiCommand.moveToNextChangeAndShow",
      "sequence": [
        "workbench.action.editor.nextChange",
        "editor.action.dirtydiff.next"
      ]
    },
    {
      "command": "multiCommand.moveToPreviousChangeAndShow",
      "sequence": [
        "workbench.action.editor.previousChange",
        "editor.action.dirtydiff.previous"
      ]
    },
    {
      "command": "multiCommand.copyAndCommentLines",
      "sequence": [
        "editor.action.clipboardCopyAction",
        "editor.action.commentLine"
      ]
    },
    {
      "command": "multiCommand.copyRelativePathAndPrintIt",
      "sequence": ["copy-relative-path-and-line-numbers.path-only", "execPaste"]
    },
    {
      "command": "multiCommand.copyRelativePathAndSelectedLinesAndPrintIt",
      "sequence": ["copy-relative-path-and-line-numbers.both", "execPaste"]
    },
    {
      "command": "multiCommand.acceptCompletionAndInsertPeriod",
      "sequence": [
        "acceptSelectedSuggestion",
        {
          "args": {
            "text": "."
          },
          "command": "type"
        }
      ]
    },
    {
      "command": "multiCommand.acceptCompletionAndInsertEquals",
      "sequence": [
        "acceptSelectedSuggestion",
        {
          "args": {
            "text": " = "
          },
          "command": "type"
        }
      ]
    },
    {
      "command": "multiCommand.acceptCompletionAndInsertSpace",
      "sequence": [
        "acceptSelectedSuggestion",
        {
          "args": {
            "text": " "
          },
          "command": "type"
        }
      ]
    }
  ],
  "nim.buildOnSave": true,
  "nim.nimprettyMaxLineLen": 88,
  "notebook.cellToolbarLocation": {
    "default": "right",
    "jupyter-notebook": "left"
  },
  "path-autocomplete.excludedItems": {
    "**/{.git,node_modules}": {
      "when": "**"
    }
  },
  "path-intellisense.showHiddenFiles": true,
  "problems.autoReveal": false,
  "problems.showCurrentInStatus": true,
  "projectManager.git.baseFolders": ["~/GitLocal/"],
  "projectManager.git.ignoredFolders": [
    "node_modules",
    "out",
    "typings",
    "test",
    ".haxelib",
    ".zinit",
    "rust-lang-book"
  ],
  "projectManager.git.maxDepthRecursion": 4,
  "projectManager.groupList": true,
  "projectManager.openInNewWindowWhenClickingInStatusBar": true,
  "projectManager.showProjectNameInStatusBar": true,
  "projectManager.sortList": "Saved",
  "python.analysis.autoImportCompletions": true,
  "python.analysis.completeFunctionParens": true,
  "python.analysis.diagnosticMode": "workspace",
  "python.analysis.typeCheckingMode": "basic",
  "python.formatting.blackPath": "black",
  "python.formatting.provider": "black",
  "python.languageServer": "Pylance",
  "python.linting.mypyArgs": [
    "--follow-imports=silent",
    "--ignore-missing-imports",
    "--show-column-numbers",
    "--no-pretty"
  ],
  "python.linting.pydocstyleArgs": ["--convention=google"],
  "python.linting.pydocstyleEnabled": true,
  "redhat.telemetry.enabled": false,
  "rust-analyzer.checkOnSave.command": "clippy",
  "scm.defaultViewMode": "tree",
  "screencastMode.fontSize": 40,
  "screencastMode.verticalOffset": 10,
  "search.exclude": {
    "**/.git": true,
    "yarn-error.log": true,
    "yarn.lock": true
  },
  "search.showLineNumbers": true,
  "search.smartCase": true,
  "settings.cycle": [
    {
      "id": "lineNumbers",
      "values": [
        {
          "editor.lineNumbers": "off"
        },
        {
          "editor.lineNumbers": "on"
        },
        {
          "editor.lineNumbers": "relative"
        }
      ]
    },
    {
      "id": "vimSelectionBackground",
      "values": [
        {
          "workbench.colorCustomizations": {
            "editor.lineHighlightBackground": "#44475a"
          }
        },
        {
          "workbench.colorCustomizations": {
            "editor.lineHighlightBackground": "#282a36"
          }
        }
      ]
    }
  ],
  "shellcheck.customArgs": ["-x"],
  "shellcheck.executablePath": "/opt/homebrew/bin/shellcheck",
  "shellformat.flag": "-i 4",
  "snipsnap.silent": true,
  "telemetry.telemetryLevel": "error",
  "terminal.explorerKind": "external",
  "terminal.external.osxExec": "iTerm2.app",
  "terminal.integrated.commandsToSkipShell": ["vspacecode.space"],
  "terminal.integrated.defaultProfile.osx": "fish",
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1"
  },
  "terminal.integrated.fontFamily": "MonoLisa, Hack Nerd Font",
  "terminal.integrated.fontSize": 14,
  "terminal.integrated.letterSpacing": 1,
  "terminal.integrated.lineHeight": 1.1,
  "terminal.integrated.macOptionIsMeta": true,
  "terminal.integrated.profiles.osx": {
    "bash": {
      "args": ["-l"],
      "icon": "terminal-bash",
      "path": "bash"
    },
    "fish": {
      "args": ["-l"],
      "path": "/opt/homebrew/bin/fish"
    },
    "tmux": {
      "icon": "terminal-tmux",
      "path": "tmux"
    }
  },
  "todo-tree.filtering.includeHiddenFiles": true,
  "todo-tree.tree.autoRefresh": true,
  "todo-tree.highlights.useColourScheme": true,
  "todo-tree.general.tags": ["TODO", "FIXME", "REVIEW", "HACK", "REF", "WARN"],
  "todo-tree.regex.enableMultiLine": true,
  "todo-tree.regex.regex": "(//|#|<!--|;|/\\*|^|^\\s*(-|\\d+.))\\s*($TAGS)",
  "typescript.suggest.completeFunctionCalls": true,
  "typescript.suggest.paths": false,
  "vim.camelCaseMotion.enable": true,
  "vim.cursorStylePerMode.insert": "line",
  "vim.cursorStylePerMode.normal": "block",
  "vim.cursorStylePerMode.replace": "block-outline",
  "vim.cursorStylePerMode.visual": "block-outline",
  "vim.cursorStylePerMode.visualblock": "block-outline",
  "vim.cursorStylePerMode.visualline": "block-outline",
  "vim.debug.loggingLevelForConsole": "debug",
  "vim.easymotion": true,
  "vim.easymotionMarkerFontWeight": "bold",
  "vim.easymotionMarkerForegroundColorOneChar": "#f78ae0",
  "vim.highlightedyank.color": "rgba(247, 138, 224, 0.40)",
  "vim.highlightedyank.enable": true,
  "vim.history": 100,
  "vim.hlsearch": true,
  "vim.insertModeKeyBindings": [
    {
      "before": ["<C-j>"],
      "commands": ["cursorDown"]
    },
    {
      "before": ["<C-k>"],
      "commands": ["cursorUp"]
    },
    {
      "before": ["<BS>"],
      "commands": ["deleteLeft"]
    },
    {
      "after": ["cmd+z"],
      "before": ["cmd+a"]
    },
    {
      "after": ["<Esc>"],
      "before": ["ctrl+d"]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    {
      "before": ["g", "H"],
      "commands": ["docsView.documentation.focus"]
    },
    {
      "before": ["g", "p"],
      "commands": ["editor.action.peekDefinition"]
    },
    {
      "after": ["s"],
      "before": ["f"]
    },
    {
      "after": ["S"],
      "before": ["F"]
    },
    {
      "before": ["g", "h"],
      "commands": ["editor.action.showDefinitionPreviewHover"]
    },
    {
      "before": ["g", "r"],
      "commands": ["editor.action.referenceSearch.trigger"]
    },
    {
      "after": ["q"],
      "before": ["Q"]
    },
    {
      "before": ["q"],
      "commands": ["workbench.action.closeActiveEditor"]
    },
    {
      "after": ["<C-d>", "z", "z"],
      "before": ["<C-d>"]
    },
    {
      "after": ["<C-u>", "z", "z"],
      "before": ["<C-u>"]
    },
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    },
    {
      "after": ["\"", "_", "D"],
      "before": ["D"]
    },
    {
      "after": ["\"", "_", "d"],
      "before": ["d"]
    },
    {
      "after": ["\"", "_", "d", "d"],
      "before": ["d", "d"]
    },
    {
      "after": ["\"", "_", "c"],
      "before": ["c"]
    },
    {
      "after": ["\"", "_", "C"],
      "before": ["C"]
    },
    {
      "after": ["\"", "_", "c", "c"],
      "before": ["c", "c"]
    },
    {
      "after": ["\"", "_", "x"],
      "before": ["x"]
    },
    {
      "after": ["\"", "_", "X"],
      "before": ["X"]
    },
    {
      "after": ["d"],
      "before": ["m"]
    },
    {
      "after": ["d", "d"],
      "before": ["m", "m"]
    },
    {
      "after": ["D"],
      "before": ["M"]
    },
    {
      "after": ["g", "b"],
      "before": ["<C-n>"]
    },
    {
      "before": ["<C-j>"],
      "commands": ["editor.action.insertCursorBelow"]
    },
    {
      "before": ["<C-k>"],
      "commands": ["editor.action.insertCursorAbove"]
    },
    {
      "before": ["J"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    {
      "before": ["K"],
      "commands": ["editor.action.moveLinesUpAction"]
    },
    {
      "before": ["g", "l"],
      "commands": ["workbench.action.gotoLine"]
    },
    {
      "before": ["g", "K"],
      "commands": ["extension.dash.specific"]
    },
    {
      "before": ["g", "D"],
      "commands": ["editor.action.revealDefinitionAside"]
    },
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "after": ["g", "_"],
      "before": ["L"]
    },
    {
      "after": ["^"],
      "before": ["H"]
    },
    {
      "after": [],
      "before": ["g", "B"],
      "commands": [
        {
          "command": "editor.action.selectHighlights"
        }
      ]
    },
    {
      "after": [],
      "before": ["g", "H"],
      "commands": [
        {
          "command": "editor.action.triggerParameterHints"
        }
      ]
    },
    {
      "before": ["u"],
      "commands": [
        {
          "command": "undo"
        }
      ]
    },
    {
      "before": ["<C-r>"],
      "commands": [
        {
          "command": "redo"
        }
      ]
    },
    {
      "after": ["v"],
      "before": ["v"]
    },
    {
      "after": ["g", "k"],
      "before": ["<up>"]
    },
    {
      "after": ["g", "j"],
      "before": ["<down>"]
    },
    {
      "after": ["y", "$"],
      "before": ["Y"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "args": "m",
          "command": "whichkey.triggerKey"
        }
      ]
    }
  ],
  "vim.searchHighlightColor": "#85e89d",
  "vim.searchHighlightTextColor": "#24292e",
  "vim.smartRelativeLine": true,
  "vim.smartcase": true,
  "vim.sneak": true,
  "vim.sneakReplacesF": true,
  "vim.useSystemClipboard": true,
  "vim.visualModeKeyBindingsNonRecursive": [
    {
      "before": ["j"],
      "after": ["g", "j"]
    },
    {
      "before": ["k"],
      "after": ["g", "k"]
    },
    {
      "after": ["s"],
      "before": ["f"]
    },
    {
      "after": ["S"],
      "before": ["F"]
    },
    {
      "before": ["<Tab>"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "after": ["y", "g", "v", "<ESC>"],
      "before": ["y"]
    },
    {
      "after": ["g", "b"],
      "before": ["<C-n>"]
    },
    {
      "after": ["\"", "_", "d"],
      "before": ["d"]
    },
    {
      "after": ["\"", "_", "c"],
      "before": ["c"]
    },
    {
      "after": ["\"", "_", "x"],
      "before": ["x"]
    },
    {
      "after": ["d"],
      "before": ["m"]
    },
    {
      "before": ["K"],
      "commands": ["editor.action.moveLinesUpAction"]
    },
    {
      "before": ["J"],
      "commands": ["editor.action.moveLinesDownAction"]
    },
    {
      "before": ["<space>"],
      "commands": ["vspacecode.space"]
    },
    {
      "before": ["g", "B"],
      "commands": [
        {
          "command": "editor.action.selectHighlights"
        }
      ]
    },
    {
      "after": ["^"],
      "before": ["H"]
    },
    {
      "after": ["g", "_"],
      "before": ["L"]
    },
    {
      "before": [">"],
      "commands": ["editor.action.indentLines"]
    },
    {
      "before": ["<"],
      "commands": ["editor.action.outdentLines"]
    },
    {
      "after": ["a", "f"],
      "before": ["v"]
    },
    {
      "before": [","],
      "commands": [
        "vspacecode.space",
        {
          "args": "m",
          "command": "whichkey.triggerKey"
        }
      ]
    }
  ],
  "vscode-neovim.logOutputToConsole": true,
  "vscode-neovim.mouseSelectionStartVisualMode": true,
  "vscode-neovim.neovimExecutablePaths.darwin": "/opt/homebrew/bin/nvim",
  "vscode-neovim.neovimInitPath": "~/GitLocal/Play/nvim/init.vim",
  "vscode-neovim.revealCursorScrollLine": true,
  "vscsm.smergeExecutablePath": "/opt/homebrew/bin/smerge",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "vspacecode.bindingOverrides": [
    {
      "command": "workbench.action.terminal.new",
      "icon": "terminal-bash",
      "keys": "!",
      "name": "New Terminal Window",
      "type": "command"
    },
    {
      "command": "workbench.action.navigateBack",
      "icon": "arrow-left",
      "keys": "[",
      "name": "Go back",
      "type": "command"
    },
    {
      "command": "workbench.action.navigateForward",
      "icon": "arrow-right",
      "keys": "]",
      "name": "Go forward",
      "type": "command"
    },
    {
      "command": "workbench.action.nextEditor",
      "icon": "debug-continue",
      "keys": "`",
      "name": "Next Editor (regardless of group)",
      "type": "command"
    },
    {
      "command": "workbench.action.previousEditor",
      "icon": "debug-reverse-continue",
      "keys": "~",
      "name": "Previous Editor (regardless of group)",
      "type": "command"
    },
    {
      "command": "workbench.action.nextEditorInGroup",
      "icon": "arrow-right",
      "keys": "b.`",
      "name": "Next Editor (current group)",
      "type": "command"
    },
    {
      "command": "workbench.action.closeEditorInAllGroups",
      "icon": "close-all",
      "keys": "b.d",
      "name": "Close current editor globally",
      "type": "command"
    },
    {
      "command": "outline.focus",
      "icon": "list-tree",
      "keys": "b.o",
      "name": "Focus outline for buffer",
      "type": "command"
    },
    {
      "command": "workbench.action.previousEditorInGroup",
      "icon": "arrow-left",
      "keys": "b.~",
      "name": "Previous Editor (current group)",
      "type": "command"
    },
    {
      "command": "workbench.action.closeOtherEditors",
      "icon": "diff-modified",
      "keys": "b.D",
      "name": "Close unmodified editors",
      "type": "command"
    },
    {
      "command": "workbench.action.output.toggleOutput",
      "icon": "output",
      "keys": "e.o",
      "name": "Toggle output view",
      "type": "command"
    },
    {
      "command": "editor.action.formatDocument",
      "icon": "symbol-keyword",
      "keys": "f.=",
      "name": "Format current file",
      "type": "command"
    },
    {
      "command": "workbench.action.openSettingsJson",
      "icon": "bracket-dot",
      "keys": "f.e.d",
      "name": "Open settings JSON",
      "type": "command"
    },
    {
      "command": "workbench.action.openSettings",
      "icon": "settings",
      "keys": "f.e.D",
      "name": "Open settings UI",
      "type": "command"
    },
    {
      "command": "workbench.action.reloadWindow",
      "icon": "refresh",
      "keys": "f.e.R",
      "name": "Reload window",
      "type": "command"
    },
    {
      "command": "workbench.action.quickOpen",
      "icon": "go-to-file",
      "keys": "f.f",
      "name": "Open file",
      "type": "command"
    },
    {
      "command": "file-browser.open",
      "icon": "folder-opened",
      "keys": "f.n",
      "name": "New file (via File Browser)",
      "type": "command"
    },
    {
      "command": "workbench.action.files.openFileFolder",
      "icon": "folder-library",
      "keys": "f.o",
      "name": "Open file browser",
      "type": "command"
    },
    {
      "command": "outline.focus",
      "icon": "symbol-interface",
      "keys": "f.O",
      "name": "Focus file outline view",
      "type": "command"
    },
    {
      "command": "fileutils.renameFile",
      "icon": "edit",
      "keys": "f.R",
      "name": "Rename file",
      "type": "command"
    },
    {
      "command": "gitlens.showCommitSearch",
      "icon": "search",
      "keys": "g./",
      "name": "Search history",
      "type": "command"
    },
    {
      "command": "gitlens.toggleFileBlame",
      "icon": "git-pull-request-draft",
      "keys": "g.b",
      "name": "Show blame for current file",
      "type": "command"
    },
    {
      "command": "git.pull",
      "icon": "repo-pull",
      "keys": "g.l",
      "name": "Pull",
      "type": "command"
    },
    {
      "keys": "g.m",
      "position": -1
    },
    {
      "command": "multiCommand.moveToNextChangeAndShow",
      "icon": "request-changes",
      "keys": "g.n",
      "name": "Move to next change and show",
      "type": "command"
    },
    {
      "command": "multiCommand.moveToPreviousChangeAndShow",
      "icon": "request-changes",
      "keys": "g.p",
      "name": "Move to previous change and show",
      "type": "command"
    },
    {
      "command": "workbench.view.extension.github-pull-request",
      "icon": "github",
      "keys": "g.r",
      "name": "Open Pull Requests view",
      "type": "command"
    },
    {
      "command": "vscsm.openInSublimeMerge",
      "icon": "git-merge",
      "keys": "g.s",
      "name": "View status in Sublime Merge",
      "type": "command"
    },
    {
      "command": "git.checkout",
      "icon": "sort-precedence",
      "keys": "g.B",
      "name": "Branch",
      "type": "command"
    },
    {
      "command": "gitlens.fetchRepositories",
      "icon": "group-by-ref-type",
      "keys": "g.F",
      "name": "Fetch repositories",
      "type": "command"
    },
    {
      "command": "gitlens.gitCommands",
      "icon": "github-action",
      "keys": "g.G",
      "name": "Git commands",
      "type": "command"
    },
    {
      "command": "openInGitHub.openProject",
      "icon": "root-folder-opened",
      "keys": "g.O",
      "name": "Open project in GitHub",
      "type": "command"
    },
    {
      "command": "git.push",
      "icon": "repo-push",
      "keys": "g.P",
      "name": "Push changes to remote",
      "type": "command"
    },
    {
      "keys": "g.S",
      "position": -1
    },
    {
      "command": "workbench.scm.focus",
      "icon": "git-compare",
      "keys": "g.S",
      "name": "View status in VSCode",
      "type": "command"
    },
    {
      "keys": "h.k",
      "position": -1
    },
    {
      "command": "breadcrumbs.focusAndSelect",
      "icon": "symbol-class",
      "keys": "j.b",
      "name": "Jump to breadcrumbs",
      "type": "command"
    },
    {
      "command": "workbench.action.gotoLine",
      "icon": "list-ordered",
      "keys": "j.l",
      "name": "Go to line in buffer",
      "type": "command"
    },
    {
      "command": "workbench.action.gotoMethod",
      "icon": "symbol-method",
      "keys": "j.m",
      "name": "Jump to method/function in file",
      "type": "command"
    },
    {
      "keys": "j.v",
      "position": -1
    },
    {
      "command": "workbench.action.showAllSymbols",
      "icon": "symbol-keyword",
      "keys": "j.I",
      "name": "Jump to symbol in project",
      "type": "command"
    },
    {
      "command": "workbench.action.toggleSidebarVisibility",
      "icon": "layout-sidebar-right",
      "keys": "l.b",
      "name": "Toggle Right Sidebar",
      "type": "command"
    },
    {
      "command": "workbench.action.closePanel",
      "icon": "layout-panel-justify",
      "keys": "l.c",
      "name": "Close panel",
      "type": "command"
    },
    {
      "command": "workbench.action.focusPanel",
      "icon": "eye",
      "keys": "l.f",
      "name": "Focus panel",
      "type": "command"
    },
    {
      "command": "workbench.action.togglePanel",
      "icon": "arrow-swap",
      "keys": "l.o",
      "name": "Toggle panel",
      "type": "command"
    },
    {
      "command": "workbench.actions.view.problems",
      "icon": "bracket-error",
      "keys": "l.p",
      "name": "Focus Problems panel",
      "type": "command"
    },
    {
      "command": "workbench.action.positionPanelLeft",
      "icon": "triangle-left",
      "keys": "l.H",
      "name": "Move panel left",
      "type": "command"
    },
    {
      "command": "workbench.action.positionPanelBottom",
      "icon": "triangle-down",
      "keys": "l.J",
      "name": "Move panel bottom",
      "type": "command"
    },
    {
      "command": "workbench.action.positionPanelRight",
      "icon": "triangle-right",
      "keys": "l.L",
      "name": "Move panel right",
      "type": "command"
    },
    {
      "command": "md-shortcut.toggleCheckboxes",
      "icon": "pass-filled",
      "keys": ["m", "languageId:markdown", "x", "c"],
      "name": "Toggle checkboxes",
      "type": "command"
    },
    {
      "command": "md-shortcut.toggleLink",
      "icon": "link",
      "keys": ["m", "languageId:markdown", "x", "k"],
      "name": "Toggle link",
      "type": "command"
    },
    {
      "command": "md-shortcut.toggleNumbers",
      "icon": "list-ordered",
      "keys": ["m", "languageId:markdown", "x", "o"],
      "name": "Toggle ordered list",
      "type": "command"
    },
    {
      "command": "md-shortcut.toggleBullets",
      "icon": "list-unordered",
      "keys": ["m", "languageId:markdown", "x", "u"],
      "name": "Toggle unordered list",
      "type": "command"
    },
    {
      "command": "md-shortcut.toggleImage",
      "icon": "device-camera",
      "keys": ["m", "languageId:markdown", "x", "I"],
      "name": "Toggle image link",
      "type": "command"
    },
    {
      "command": "projectManager.editProjects",
      "icon": "edit",
      "keys": "p.e",
      "name": "Edit projects",
      "type": "command"
    },
    {
      "command": "projectManager.listProjects",
      "icon": "list-tree",
      "keys": "p.l",
      "name": "List projects (current window)...",
      "type": "command"
    },
    {
      "command": "projectManager.listProjects",
      "icon": "compass",
      "keys": "p.p",
      "name": "List projects (current window)...",
      "type": "command"
    },
    {
      "command": "projectManager.refreshAnyProjects",
      "icon": "refresh",
      "keys": "p.r",
      "name": "Refresh projects",
      "type": "command"
    },
    {
      "command": "projectManager.saveProject",
      "icon": "save",
      "keys": "p.s",
      "name": "Save project",
      "type": "command"
    },
    {
      "command": "projectManager.listProjectsNewWindow",
      "icon": "empty-window",
      "keys": "p.P",
      "name": "List projects (new window)...",
      "type": "command"
    },
    {
      "command": "workbench.action.closeAllEditors",
      "icon": "close-all",
      "keys": "q.a",
      "name": "Close all editors",
      "type": "command"
    },
    {
      "command": "code-runner.stop",
      "icon": "debug-disconnect",
      "keys": "q.c",
      "name": "Stop currently running code",
      "type": "command"
    },
    {
      "command": "workbench.action.debug.stop",
      "icon": "debug-stop",
      "keys": "q.d",
      "name": "Stop debugging",
      "type": "command"
    },
    {
      "command": "workbench.action.closeFolder",
      "icon": "folder",
      "keys": "q.p",
      "name": "Close current project",
      "type": "command"
    },
    {
      "command": "workbench.action.closeEditorsInAllGroups",
      "icon": "close-all",
      "keys": "q.A",
      "name": "Close current file in all groups",
      "type": "command"
    },
    {
      "command": "workbench.action.closeEditorsToTheLeft",
      "icon": "triangle-left",
      "keys": "q.H",
      "name": "Close editors to the left",
      "type": "command"
    },
    {
      "command": "workbench.action.closeEditorsToTheRight",
      "icon": "triangle-right",
      "keys": "q.L",
      "name": "Close editors to the right",
      "type": "command"
    },
    {
      "command": "actions.find",
      "icon": "search",
      "keys": "s.f",
      "name": "Search in current File (Native)",
      "type": "command"
    },
    {
      "command": "search.action.openNewEditor",
      "keys": "s.E",
      "name": "New Search Editor",
      "type": "command"
    },
    {
      "command": "editor.action.startFindReplaceAction",
      "icon": "replace",
      "keys": "s.F",
      "name": "Replace in current File (Native)",
      "type": "command"
    },
    {
      "command": "workbench.action.toggleCenteredLayout",
      "keys": "t.c",
      "name": "Toggle centered window layout",
      "type": "command"
    },
    {
      "command": "extension.toggleTheme",
      "keys": "t.d",
      "name": "Toggle day/night theme",
      "type": "command"
    },
    {
      "command": "settings.cycle.lineNumbers",
      "keys": "t.l",
      "name": "Cycle line numbers",
      "type": "command"
    },
    {
      "command": "workbench.action.toggleTabsVisibility",
      "keys": "t.t",
      "name": "Toggle tab visibility",
      "type": "command"
    },
    {
      "command": "editor.action.toggleWordWrap",
      "keys": "t.W",
      "name": "Toggle word wrap",
      "type": "command"
    },
    {
      "command": "workbench.action.focusNextGroup",
      "keys": "w.`",
      "name": "Focus next group",
      "type": "command"
    },
    {
      "command": "workbench.action.focusPreviousGroup",
      "keys": "w.h",
      "name": "Focus previous group",
      "type": "command"
    },
    {
      "command": "workbench.action.focusBelowGroup",
      "keys": "w.j",
      "name": "Focus below group",
      "type": "command"
    },
    {
      "command": "workbench.action.focusAboveGroup",
      "keys": "w.k",
      "name": "Focus above group",
      "type": "command"
    },
    {
      "command": "workbench.action.focusNextGroup",
      "keys": "w.l",
      "name": "Focus next group",
      "type": "command"
    },
    {
      "command": "workbench.action.files.newUntitledFile",
      "keys": "w.t",
      "name": "New untitled file",
      "type": "command"
    },
    {
      "command": "workbench.action.focusPreviousGroup",
      "keys": "w.~",
      "name": "Focus previous group",
      "type": "command"
    },
    {
      "commands": [
        "workbench.action.closePanel",
        "workbench.action.closeSidebar",
        "workbench.action.editorLayoutSingle"
      ],
      "keys": "w.M",
      "name": "Close sidebar, panel, and other editor groups",
      "type": "commands"
    },
    {
      "command": "editor.action.formatSelection",
      "keys": "x.=",
      "name": "Format selection",
      "type": "command"
    },
    {
      "command": "wwm.aligncode",
      "keys": "x.A",
      "name": "Align code",
      "type": "command"
    },
    {
      "command": "workbench.action.replaceInFiles",
      "keys": "x.R",
      "name": "Replace in files",
      "type": "command"
    },
    {
      "command": "workbench.action.files.openFileFolder",
      "keys": "S.f",
      "name": "Show OS file picker",
      "type": "command"
    },
    {
      "command": "workbench.view.extension.mongoDB",
      "keys": "S.m",
      "name": "Show MongoDB",
      "type": "command"
    },
    {
      "command": "workbench.view.extension.project-manager",
      "keys": "S.M",
      "name": "Show Project Manager",
      "type": "command"
    },
    {
      "command": "workbench.view.extension.github-pull-requests",
      "keys": "S.P",
      "name": "Show Github Pull Requests",
      "type": "command"
    },
    {
      "command": "workbench.view.extension.todo-tree-container",
      "keys": "S.T",
      "name": "Show TODOs",
      "type": "command"
    },
    {
      "command": "toggleVim",
      "keys": "T.v",
      "name": "Toggle vim",
      "type": "command"
    },
    {
      "bindings": [
        {
          "command": "workbench.action.openGlobalSettings",
          "key": ",",
          "name": "Open global settings",
          "type": "command"
        },
        {
          "command": "workbench.action.openGlobalKeybindings",
          "key": "k",
          "name": "Open global keybindings",
          "type": "command"
        },
        {
          "command": "workbench.action.configureLanguageBasedSettings",
          "key": "l",
          "name": "Open language settings",
          "type": "command"
        },
        {
          "command": "workbench.action.openSnippets",
          "key": "n",
          "name": "Open user snippets",
          "type": "command"
        },
        {
          "command": "workbench.action.openSettingsJson",
          "key": "s",
          "name": "Open global settings JSON",
          "type": "command"
        },
        {
          "command": "workbench.userDataSync.actions.syncNow",
          "key": "u",
          "name": "Update/upload settings",
          "type": "command"
        },
        {
          "command": "workbench.action.openWorkspaceSettings",
          "key": "w",
          "name": "Open workspace settings",
          "type": "command"
        },
        {
          "command": "workbench.action.openGlobalKeybindingsFile",
          "key": "K",
          "name": "Open global keybindings JSON",
          "type": "command"
        },
        {
          "command": "workbench.action.openWorkspaceSettingsFile",
          "key": "W",
          "name": "Open workspace settings JSON",
          "type": "command"
        },
        {
          "bindings": [
            {
              "command": "workbench.action.toggleDevTools",
              "key": "d",
              "name": "Show developer tools",
              "type": "command"
            },
            {
              "command": "workbench.action.setLogLevel",
              "key": "l",
              "name": "Set log level...",
              "type": "command"
            },
            {
              "command": "workbench.action.openProcessExplorer",
              "key": "p",
              "name": "Open Process Explorer",
              "type": "command"
            },
            {
              "command": "workbench.action.showRuntimeExtensions",
              "key": "r",
              "name": "Show running extensions",
              "type": "command"
            },
            {
              "command": "workbench.action.showLogs",
              "key": "L",
              "name": "Show logs...",
              "type": "command"
            }
          ],
          "key": "d",
          "name": "+Developer...",
          "type": "bindings"
        }
      ],
      "icon": "settings",
      "keys": ",",
      "name": "+Settings/Preferences",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "editor.action.commentLine",
          "key": "l",
          "name": "Comment/uncomment line(s)",
          "type": "command"
        },
        {
          "command": "code-runner.run",
          "key": "r",
          "name": "Run code in curent file",
          "type": "command"
        },
        {
          "commands": [
            "editor.action.clipboardCopyAction",
            "editor.action.commentLine"
          ],
          "key": "y",
          "name": "Copy selection and comment line",
          "type": "command"
        }
      ],
      "icon": "github-action",
      "keys": "c",
      "name": "+Code Actions",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "workbench.view.explorer",
          "icon": "list-tree",
          "key": "e",
          "name": "Explorer view",
          "type": "command"
        },
        {
          "command": "workbench.scm.focus",
          "icon": "git-branch",
          "key": "g",
          "name": "Source Control view",
          "type": "command"
        },
        {
          "command": "workbench.view.extension.mongoDB",
          "icon": "database",
          "key": "m",
          "name": "MongoDB view",
          "type": "command"
        },
        {
          "command": "workbench.view.extension.github-pull-requests",
          "icon": "git-pull-request",
          "key": "p",
          "name": "Github Pull Requests view",
          "type": "command"
        },
        {
          "command": "todo-tree-view.focus",
          "icon": "checklist",
          "key": "t",
          "name": "TODO View",
          "type": "command"
        },
        {
          "command": "workbench.view.extensions",
          "icon": "extensions",
          "key": "x",
          "name": "Extensions Marketplace",
          "type": "command"
        },
        {
          "command": "workbench.view.extension.project-manager",
          "icon": "project",
          "key": "P",
          "name": "Project Manager view",
          "type": "command"
        },
        {
          "command": "timeline.focus",
          "icon": "ungroup-by-ref-type",
          "key": "T",
          "name": "Timeline View",
          "type": "command"
        }
      ],
      "icon": "open-preview",
      "keys": "o",
      "name": "+Open",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "extension.copyGitHubLinkToClipboard",
          "key": "g",
          "name": "Copy GitHub link to current file",
          "type": "command"
        },
        {
          "command": "editor.action.copyLinesDownAction",
          "key": "j",
          "name": "Copy line(s) down",
          "type": "command"
        },
        {
          "command": "editor.action.copyLinesUpAction",
          "key": "k",
          "name": "Copy line(s) up",
          "type": "command"
        },
        {
          "command": "fileutils.copyFileName",
          "key": "n",
          "name": "Copy current file name",
          "type": "command"
        },
        {
          "command": "copyFilePath",
          "key": "p",
          "name": "Copy current file absolute path",
          "type": "command"
        },
        {
          "command": "copyRelativeFilePath",
          "key": "P",
          "name": "Copy current file relative path",
          "type": "command"
        }
      ],
      "icon": "clippy",
      "keys": "y",
      "name": "+Yank/Copy",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "bookmarks.list",
          "key": "b",
          "name": "Open list of bookmarks in current file",
          "type": "command"
        },
        {
          "command": "bookmarks.toggle",
          "key": "m",
          "name": "Toggle bookmark",
          "type": "command"
        },
        {
          "command": "bookmarks.jumpToNext",
          "key": "n",
          "name": "Jump to next bookmark",
          "type": "command"
        },
        {
          "command": "workbench.view.extension.bookmarks",
          "key": "o",
          "name": "Open Bookmarks explorer",
          "type": "command"
        },
        {
          "command": "bookmarks.jumpToPrevious",
          "key": "p",
          "name": "Jump to previous bookmark",
          "type": "command"
        },
        {
          "command": "bookmarks.listFromAllFiles",
          "key": "B",
          "name": "Open list of bookmarks in all files",
          "type": "command"
        }
      ],
      "icon": "bookmark",
      "keys": "B",
      "name": "+Bookmarks",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "gitlens.diffWithPrevious",
          "key": "d",
          "name": "...diff current file against previous revision",
          "type": "command"
        },
        {
          "command": "vscsm.fileHistoryInSublimeMerge",
          "key": "f",
          "name": "...open file history in Sublime Merge",
          "type": "command"
        },
        {
          "command": "vscsm.lineHistoryInSublimeMerge",
          "key": "l",
          "name": "...open line history in Sublime Merge",
          "type": "command"
        },
        {
          "command": "gitHistory.diffFileAtCommitAgainstCurrent",
          "key": "D",
          "name": "...diff current file against previous revision (choose commit)",
          "type": "command"
        }
      ],
      "keys": ["g", "f"],
      "name": "+File",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "openInGitHub.openFileBlame",
          "key": "b",
          "name": "...open file blame",
          "type": "command"
        },
        {
          "command": "openInGitHub.openFile",
          "key": "f",
          "name": "...open file",
          "type": "command"
        },
        {
          "command": "openInGitHub.openFileHistory",
          "key": "h",
          "name": "...open file history",
          "type": "command"
        },
        {
          "command": "openInGitHub.openIssues",
          "key": "i",
          "name": "...open repo issues",
          "type": "command"
        },
        {
          "command": "openInGitHub.openProject",
          "key": "p",
          "name": "...open project",
          "type": "command"
        },
        {
          "command": "openInGitHub.openPullRequests",
          "key": "r",
          "name": "...open pull requests",
          "type": "command"
        },
        {
          "command": "pr.openPullRequestOnGitHub",
          "key": "R",
          "name": "...open checked out pull request on GitHub",
          "type": "command"
        }
      ],
      "keys": ["g", "g"],
      "name": "+Github...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "commands": ["copy-relative-path-and-line-numbers.both", "execPaste"],
          "key": "l",
          "name": "...relative path of current file AND selected line numbers (copies it too)",
          "type": "command"
        },
        {
          "commands": [
            "copy-relative-path-and-line-numbers.path-only",
            "execPaste"
          ],
          "key": "r",
          "name": "...relative path of current file (copies it too)",
          "type": "command"
        },
        {
          "command": "extension.relativePath",
          "key": "R",
          "name": "...relative path of other file in project",
          "type": "command"
        }
      ],
      "keys": ["i", "f"],
      "name": "+Insert file...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "bindings": [
            {
              "command": "nim.run.file",
              "icon": "terminal",
              "key": "c",
              "name": "Compile + Run Nim file",
              "type": "command"
            }
          ],
          "icon": "play",
          "key": "c",
          "name": "+Execute",
          "type": "bindings"
        }
      ],
      "keys": ["m", "languageId:nim"],
      "name": "Nim",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "md-shortcut.toggleTitleH1",
          "key": "1",
          "name": "Level 1 (#)",
          "type": "command"
        },
        {
          "command": "md-shortcut.toggleTitleH2",
          "key": "2",
          "name": "Level 2 (##)",
          "type": "command"
        },
        {
          "command": "md-shortcut.toggleTitleH3",
          "key": "3",
          "name": "Level 3 (###)",
          "type": "command"
        },
        {
          "command": "md-shortcut.toggleTitleH4",
          "key": "4",
          "name": "Level 4 (####)",
          "type": "command"
        },
        {
          "command": "md-shortcut.toggleTitleH5",
          "key": "5",
          "name": "Level 5 (#####)",
          "type": "command"
        },
        {
          "command": "md-shortcut.toggleTitleH6",
          "key": "6",
          "name": "Level 6 (######)",
          "type": "command"
        }
      ],
      "keys": ["m", "languageId:markdown", "x", "h"],
      "name": "+Choose header level...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "commands": [
            "workbench.action.splitEditorLeft",
            "workbench.action.quickOpen"
          ],
          "key": "h",
          "name": "...to the left",
          "type": "commands"
        },
        {
          "commands": [
            "workbench.action.splitEditorDown",
            "workbench.action.quickOpen"
          ],
          "key": "j",
          "name": "...to below",
          "type": "commands"
        },
        {
          "commands": [
            "workbench.action.splitEditorUp",
            "workbench.action.quickOpen"
          ],
          "key": "k",
          "name": "...to above",
          "type": "commands"
        },
        {
          "commands": [
            "workbench.action.splitEditorRight",
            "workbench.action.quickOpen"
          ],
          "key": "l",
          "name": "...to the right",
          "type": "commands"
        }
      ],
      "keys": ["w", "f"],
      "name": "+Open file in new group...",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "remove-empty-lines.inDocument",
          "key": "f",
          "name": "Delete empty lines in file",
          "type": "command"
        },
        {
          "command": "remove-empty-lines.inSelection",
          "key": "s",
          "name": "Delete empty lines in selection (adjacent lines if no selection)",
          "type": "command"
        },
        {
          "command": "editor.action.trimTrailingWhitespace",
          "key": "w",
          "name": "Delete trailing whitespace",
          "type": "command"
        }
      ],
      "keys": ["x", "d"],
      "name": "+Delete",
      "type": "bindings"
    },
    {
      "bindings": [
        {
          "command": "workbench.action.selectTheme",
          "key": "c",
          "name": "Select: Editor Color Theme",
          "type": "command"
        },
        {
          "command": "workbench.action.selectIconTheme",
          "key": "f",
          "name": "Select: File Icon Theme",
          "type": "command"
        },
        {
          "command": "workbench.action.selectProductIconTheme",
          "key": "p",
          "name": "Select: Product Icon Theme",
          "type": "command"
        },
        {
          "command": "extension.toggleTheeme",
          "key": "t",
          "name": "Toggle Day/Night Theme",
          "type": "command"
        }
      ],
      "keys": ["T", "s"],
      "name": "+Select Themes",
      "type": "bindings"
    }
  ],
  "whichkey.delay": 0,
  "whichkey.sortOrder": "nonNumberFirst",
  "window.restoreWindows": "all",
  "window.titleBarStyle": "native",
  "workbench.activityBar.visible": true,
  "workbench.colorCustomizations": {
    "[GitHub Dark]": {
      "terminal.ansiBlack": "#24292e",
      "terminal.ansiBlue": "#b392f0",
      "terminal.ansiCyan": "#79b8ff",
      "terminal.ansiGreen": "#85e89d",
      "terminal.ansiMagenta": "#f692ce",
      "terminal.ansiRed": "#f97583",
      "terminal.ansiWhite": "#ffffff",
      "terminal.ansiYellow": "#ffea7f"
    },
    "editor.lineHighlightBackground": "#1073cf2d",
    "editor.lineHighlightBorder": "#9fced11f",
    "editorCursor.foreground": "#db2466"
  },
  "workbench.colorTheme": "Dracula Pro (Van Helsing)",
  "workbench.editor.labelFormat": "medium",
  "workbench.editor.openPositioning": "first",
  "workbench.editor.showTabs": false,
  "workbench.editor.tabSizing": "shrink",
  "workbench.editorAssociations": {
    "*.ipynb": "jupyter-notebook",
    "*.json": "default"
  },
  "workbench.fontAliasing": "auto",
  "workbench.iconTheme": "material-icon-theme",
  "workbench.layoutControl.enabled": false,
  "workbench.list.automaticKeyboardNavigation": false,
  "workbench.productIconTheme": "material-product-icons",
  "workbench.quickOpen.closeOnFocusLost": false,
  "workbench.sideBar.location": "right",
  "workbench.startupEditor": "newUntitledFile",
  "workbench.tree.indent": 20,
  "workbench.view.alwaysShowHeaderActions": true,
  "yaml.customTags": [
    "!And",
    "!And sequence",
    "!If",
    "!If sequence",
    "!Not",
    "!Not sequence",
    "!Equals",
    "!Equals sequence",
    "!Or",
    "!Or sequence",
    "!FindInMap",
    "!FindInMap sequence",
    "!Base64",
    "!Join",
    "!Join sequence",
    "!Cidr",
    "!Ref",
    "!Sub",
    "!Sub sequence",
    "!GetAtt",
    "!GetAZs",
    "!ImportValue",
    "!ImportValue sequence",
    "!Select",
    "!Select sequence",
    "!Split",
    "!Split sequence"
  ],
  "yaml.schemas": {}
}
