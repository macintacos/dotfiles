#!/usr/local/bin/zsh

# Script Options:
## Force an exit if script tries to use an unset variable:
set -o nounset
## Force an exit if any commands exit with non-zero status:
set -o errexit
## Catch mid-pipe non-zero exit statuses:
set -o pipefail

usage() {
    cat <<EOF >&2
Command used to clean local git branches that have been removed on remote.

Usage: git-clean-local [-sDh]

-s, -search, --search : View (but don't delete) local branches that are not on remote
   -D, -del, --delete : Deletes all local branches that are not on remote
    -h, -help, --help : Display this help text

EOF
}

if [ $# -eq 0 ]; then
    usage
fi

while [ $# -gt 0 ]; do
    case $1 in
    -h | -help | --help)
        usage
        ;;
    -s | -search | --search)
        git checkout master
        echo "Fetching remotes..."
        git fetch --all

        git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}'

        if ! [ ${gone_local} ]; then
            echo "No local branch has been deleted on remote." >&2
            return 1
        fi

        if [ -z "$1" ]; then
            git remote prune origin
            echo "___________________________________________________________________________"
            echo "The following local branches have been deleted on the remote repositories:"
            echo $gone_local
            echo "To delete them all, run the following command:"
            echo "git-clean-local -D"
            echo "---------------------------------------------------------------------------"
        fi
        ;;
    -D | -del | --delete)
        git checkout master
        echo "Fetching remotes before deleting..."
        git fetch --all
        git remote prune origin
        git branch -vv | grep 'origin/.*: gone]' | awk '{print $1}' | xargs git branch -D
        ;;
    *)
        usage
        ;;
    esac
    shift
done
